//
// Sets custom gutter width
// Imports Bootstrap files
// Largest container size is set to Bootstrap's medium
// Enhances the default Bootstrap grid by a new break point (is - intermediate small)
// @author Kevin Wellmann
//

$grid-gutter-width: 40px;

$container-sm: auto;
$container-phone: ((400px + $grid-gutter-width));
$container-is: auto;
$screen-is: 420px;
$screen-is-min: $screen-is;
$screen-is-max: 675px;
$screen-xs-max: ($screen-is-min - 1);

@import "../../../node_modules/bootstrap-sass/assets/stylesheets/bootstrap/variables",
        "../../../node_modules/bootstrap-sass/assets/stylesheets/bootstrap/mixins/grid-framework",
        "../../../node_modules/bootstrap-sass/assets/stylesheets/bootstrap/mixins/responsive-visibility";

$container-lg: $container-md;

// Minimum screen size for Medium screen / tablet.
$screen-sm-min: ($screen-is-max + 1);

// Container width for the custom grid.
//
// Set the container width, and override it for fixed navbars in media queries.
.container {
  @media (min-width: $screen-is-min) and (max-width: $screen-is-max) {
    width: $container-is;
  }
}

// Function that creates the custom grid
// Intermediate small grid
@media (min-width: $screen-is-min) and (max-width: $screen-is-max) {
  @include make-grid(is);
}

// Add visibility "visible-is" class for the custom grid
@media (min-width: $screen-is-min) and (max-width: $screen-is-max) {
  @include responsive-visibility('.visible-is');
}

// Add hidden "hidden-is" class for the custom grid
@media (min-width: $screen-is-min) and (max-width: $screen-is-max) {
  @include responsive-invisibility('.hidden-is');
}

// Define the "visible-is" class as hidden in all other grid widths (Except in the custom grid).
@media (min-width: $screen-sm-min) {
  @include responsive-invisibility('.visible-is');
}

@media (max-width: $screen-xs-max) {
  @include responsive-invisibility('.visible-is');
}

// Generate the is columns
@mixin make-is-column($columns, $gutter: $grid-gutter-width) {
    position: relative;
    min-height: 1px;
    padding-left: ($gutter / 2);
    padding-right: ($gutter / 2);
    @media (min-width: $screen-is) {
        float: left;
        width: percentage(($columns / $grid-columns));
    }
}
@mixin make-is-column-offset($columns) {
    @media (min-width: $screen-is-min) {
        margin-left: percentage(($columns / $grid-columns));
    }
}
@mixin make-is-column-push($columns) {
    @media (min-width: $screen-is-min) {
        left: percentage(($columns / $grid-columns));
    }
}
@mixin make-is-column-pull($columns) {
    @media (min-width: $screen-is-min) {
        right: percentage(($columns / $grid-columns));
    }
}
